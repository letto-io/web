files:
  include:
    - 'public/stylesheets/**/*.scss'

# enforce the use of the use of quotes in attribute values
attribute-quotes:
  - 1
  - include: true

# enforce how many elements a BEM selector can contain
bem-depth:
  - 1
  - max-depth: 1

# nforce whether one should use 0 or none when specifying a zero border value
border-zero:
  - 2
  - convention: '0'

# enforce the use of the chosen brace style
brace-style:
  - 2
  - style: 1tbs
    allow-single-line: false

# enforce a convention for class names
class-name-format:
  - 2
  - allow-leading-underscore: false
    convention: hyphenatedlowercase

# enforce whether or not @import paths should have leading underscores and/or
# filename extensions
clean-import-paths:
  - 2
  - leading-underscore: false
    filename-extension: false

# enforce whether or not parenthesis should be included if no arguments are
# defined or used, when declaring or invoking a mixin
empty-args:
  - 1
  - include: false

# enforce whether or not nested blocks should include a space between the last
# non-comment declaration or not
empty-line-between-blocks:
  - 2
  - include: true
    allow-single-line-rulesets: false

# enforce that extends should be written before declarations in a ruleset
extends-before-declarations: 1

# enforce that extends should be written before mixins in a ruleset
extends-before-mixins: 1

# enforce the nesting of attributes
force-attribute-nesting: 2

# enforce the nesting of elements
force-element-nesting: 2

# enforce the nesting of pseudo elements/classes
force-pseudo-nesting: 2

# enforce a convention for function names
function-name-format:
  - 2
  - allow-leading-underscore: false
    convention: hyphenatedlowercase

# enforce the length of hexadecimal values
hex-length:
  - 1
  - style: short

# enforce the case of hexadecimal values
hex-notation:
  - 1
  - style: lowercase

# enforce a convention for ids
id-name-format:
  - 2
  - allow-leading-underscore: false
    convention: hyphenatedlowercase

# enforce whether or not decimal numbers should include a leading zero
leading-zero:
  - 1
  - include: false

# enforce a convention for mixin names
mixin-name-format:
  - 2
  - allow-leading-underscore: false
    convention: false

# enforce that mixins should be written before declarations in a ruleset
mixins-before-declarations: 1

# enforce how deeply a selector can be nested
nesting-depth:
  - 1
  - max-depth: 2

# warn against the use of attribute selectors
no-attribute-selectors: 2

# disallow the use of hexadecimal colors
no-color-hex: 0

# disallow the use of color literals and basic color functions in any declarations other than variables or maps/lists
no-color-literals: 1

# warn against the use of combinators
no-combinators: 0

# enforce the use of Sass single-line comments and disallow CSS comments
no-css-comments: 1

# enforce that @debug statements are not allowed to be used
no-debug: 1

# warn against the use of certain properties
no-disallowed-properties:
  - 1
  - properties: []

# enforce that duplicate properties are not allowed within the same block
no-duplicate-properties:
  - 1
  - exclude: []

# enforce that rulesets are not empty
no-empty-rulesets: 1

# enforce that extends are not allowed to be used
no-extends: 0

# enforce that ID selectors are not allowed to be used
no-ids: 0

# enforce that important declarations are not allowed to be used
no-important: 0

# enforce that only valid of hexadecimal values are written
no-invalid-hex: 2

# enforce that selectors aren't repeated and that their properties are merged
no-mergeable-selectors: 1

# enforce the correct spelling of CSS properties and prevent the use of unknown CSS properties
no-misspelled-properties:
  - 2
  - extra-properties: []

# enforce that selectors are not allowed to have qualifying elements
no-qualifying-elements: 2

# enforce that trailing zeros are not allowed
no-trailing-zero: 1

# enforce whether the keyword all can be used with the transition or transition-property property
no-transition-all: 1

# warn against the use of * (universal) selectors
no-universal-selectors: 1

# enforce that protocols and domains are not used within urls
no-url-protocols: 1

# enforce that vendor prefixes are not allowed to be used
no-vendor-prefixes: 1

# enforce that @warn statements are not allowed to be used
no-warn: 1

# enforce that new declarations must begin on new lines
one-declaration-per-line: 2

# enforce whether extends should only include placeholder selectors
placeholder-in-extend: 0

# enforce a convention for placeholder names
placeholder-name-format:
  - 1
  - allow-leading-underscore: false
    convention: hypenathedlowercase

# enforce the order in which declarations are written
property-sort-order:
  - 1
  - order: smacss

# disallow the use of units not specified in global or per-property
property-units: 1

# enforce that:
#   Pseudo-elements must start with double colons
#   Pseudo-classes must start with single colon
pseudo-element: 2

# enforce whether single quotes ('') or double quotes ("") should be used for all strings
quotes:
  - 2
  - style: single

# enforce that values in their shorthand form are as concise as specified
shorthand-values: 1

# enforce whether selectors should be placed on a new line
single-line-per-selector: 1

# enforce whether or not a space should be included after a bang (!)
space-after-bang: 2

# enforce whether or not a space should be included after a colon (:)
space-after-colon: 2

# enforce whether or not a space should be included after a comma (,)
space-after-comma: 2

# enforce whether or not a single space should be included before and after the following operators: +, -, /, *, %, <, > ==, !=, <= and >=
space-around-operator: 2

# enforce whether or not a space should be included before a bang (!)
space-before-bang:
  - 2
  - include: true

# enforce whether or not a space should be included before a brace ({)
space-before-brace: 1

# enforce whether or not a space should be included before a colon (:)
space-before-colon: 0

# enforce whether or not a space should be included before the first item and after the last item inside parenthesis (())
space-between-parens: 1

# enforce whether the last declaration in a block should include a semicolon (;) or not (.sass syntax excluded)
trailing-semicolon:
  - 1
  - include: true

# enforce that URLs are wrapped in quotes
url-quotes: 2

# enforce the use of variables for the values of specified properties
variable-for-property: 0

# enforce a convention for variable names
variable-name-format:
  - 1
  - allow-leading-underscore: false
    convention: hyphenatedlowercase

# enforce whether or not values of 0 used for length should be unitless
zero-unit:
  - 1
  - include: false
